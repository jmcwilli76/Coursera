x <-1:10
if(x > 5) x <- 0
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 +100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
:?
?:
?':'
?':'
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5,10,length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf < num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Jesse")
my_name
paste(my_name, collapse = " ")
past("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"), SEP = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
name(vect2) <- c("foo","bar","norf")
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
swirl()
clear
cls
list.files
directory <- "D:\Temp\Coursera\R Programing\Week 2 Programming Data\specdata"
directory <- "D:/Temp/Coursera/R Programing/Week 2 Programming Data/specdata"
list.file(path = directory)
list.files(path = directory)
?list
?list.files
?readcsv
?read
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
?read.csv
?data.frame
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
exists(myDataFrame)
exists("myDataFrame")
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
myDataFrame <- pollutantmean(directory,"",1)
myDataFrame[1:10]
myDataFrame[1,]
myDataFrame[731,]
myDataFrame <- NA
?rbind
fileName <- "002.csv"
paste(directory,fileName, sep = "\")
)
end
quit
:
""
~
`
a
d
)
?paste
?
end
|
\
/
")"
")
")"
paste("dirName","filename", sep = "-")
paste("dirName","filename", sep = "/")
paste("dirName","filename", sep = "\")
")"
")"
paste(directory,fileName, sep = "/")
read.csv(paste(directory,filename,sep="/"), header = TRUE)
fileFQDN <- paste(directory,fileName, sep = "/")
read.csv(fileFQDN, header = TRUE)
myDataFrame <- read.csv(fileFQDN, header = TRUE)
length(myDataFrame)
rows(myDataFrame)
?count
nrow(myDataFrame)
myDataFrame <- read.csv(directory + "/003.csv", header = TRUE)
fileFQDN2 <- paste(directory,"003.csv", sep = "/")
myDataFrame <- read.csv(fileFQDN2, header = TRUE)
nrow(myDataFrame)
myDataFrame <- rbind(read.csv(fileFQDN, header = TRUE))
myDataFrame <- read.csv(fileFQDN2, header = TRUE)
myDataFrame <- rbind(read.csv(fileFQDN, header = TRUE),c(1:4))
myDataFrame2 <- read.csv(fileFQDN2, header = TRUE)
myDataFrame1 <- read.csv(fileFQDN1, header = TRUE)
myDataFrame1 <- read.csv(fileFQDN, header = TRUE)
myDataFrame <- (myDataFrame1,myDataFrame2)
myDataFrame <- rbind(myDataFrame1,myDataFrame2)
myDataFrame <- rbind(myDataFrame,myDataFrame2)
View(myDataFrame)
myDataFrame1 <- NA
myDataFrame2 <- NA
myDataFrame2 <-
2
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
myDataFrame <- pollutantmean(directory,"",1)
myDataFrame <- NA
read.csv(fileFQDN2, header = TRUE, sep = ",")
read.csv(fileFQDN2, header = TRUE, sep = ",")[id==3]
subset(read.csv(fileFQDN2, header = TRUE, sep = ","), id == 3)
subset(read.csv(fileFQDN2, header = TRUE, sep = ","), 4 == 3)
subset(read.csv(fileFQDN2, header = TRUE, sep = ","), ID == 3)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"",1)
filePathName <- fileFQDN
subset(read.csv(filePathName, header = TRUE, sep = ","), ID == id)
id <- 1
subset(read.csv(filePathName, header = TRUE, sep = ","), ID == id)
myDataFrame <- subset(read.csv(filePathName, header = TRUE, sep = ","), ID == id)
myDataFrame <- rbind(myDataFrame,subset(read.csv(filePathName, header = TRUE, sep = ",")), ID == id)
View(myDataFrame)
subset(myDataFrame, ID == id)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
myDataFrame <- rbind(myDataFrame,subset(read.csv(filePathName, header = TRUE, sep = ","), ID == id))
pollutantmean(directory,"",1)
View(myDataFrame)
pollutantmean(directory,"sulfate",1)
myDataFrame <- pollutantmean(directory,"sulfate",1)
subset(myDataFrame,select = "sulfate")
pollutant <- "sulfate"
subset(myDataFrame,select = pollutant)
subset(myDataFrame,select = pollutant)[is.na(ID)]
subset(myDataFrame,is.na(ID),select = pollutant)
subset(myDataFrame,!is.na(ID),select = pollutant)
View(myDataFrame)
subset(myDataFrame,!is.na(pollutant),select = pollutant)
subset(myDataFrame,!is.na("sulfate"),select = pollutant)
subset(myDataFrame,!is.na(sulfate),select = pollutant)
subset(myDataFrame,!is.na(pollutant),select = pollutant)
subset(myDataFrame,!is.na(sulfate),select = pollutant)
numPollutant <- subset(myDataFrame,select = pollutant)
numPollutant <- list(subset(myDataFrame,select = pollutant))
numPollutant
numPollutant[!is.na(numPollutant)]
class(numPollutant)
numPollutant[!is.na(numPollutant)]
na.omit(numPollutant)
numPollutant
numPollutant[,ID]
numPollutant[,1]
numPollutant[,0]
numPollutant[1]
numPollutant[is.na()]
numPollutant[is.na(1)]
mean(numPollutant)
mean(numPollutant[1])
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1)
mean(pollutantmean(directory,"sulfate",1))
mean(as.integer(pollutantmean(directory,"sulfate",1)))
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1)
?mean
pollutantmean(directory,"sulfate",1:2)
subset(myDataFrame, ID == 1)
subset(myDataFrame, ID == 1:2)
subset(myDataFrame, ID == C(1:2))
class(myDataFrame)
pollutantmean(directory,"sulfate",1:2)
pollutantmean(directory,"sulfate",c(1:2)
)
pollutantmean(directory,"sulfate",c(1:2))
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",c(1:2))
pollutantmean(directory,"sulfate",c(1:2))
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",c(1:2))
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",c(1:2))
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
unlist(numPollutant)
mean(unlist(numPollutant))
mean(unlist(numPollutant), na.rm = TRUE)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",c(1:2))
pollutantmean(directory,"sulfate",1)
pollutantmean(directory,"sulfate",C(1:3))
pollutantmean(directory,"sulfate")
pollutantmean(directory,"sulfate",1:3)
pollutantmean(directory,"sulfate",1:10)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1:10)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1:10)
myDataFrame <- pollutantmean(directory,"sulfate",1:10)
myDataFrame
View(myDataFrame)
class(myDataFrame)
mean(myDataFrame)
mean(myDataFrame[1])
mean(myDataFrame[1], na.rm = TRUE)
mean(myDataFrame[[1]], na.rm = TRUE)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",1:10)
pollutantmean(directory,"sulfate",1:10)
myDataFrame <- na
myDataFrame <- NA
pollutantmean(directory,"sulfate",1:10)
pollutantmean(directory,"sulfate",70:72)
pollutantmean(directory,"sulfate",70:72)
pollutantmean(directory,"sulfate",70:72)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",70:72)
directory <- "D:/Temp/Coursera/R Programing/Week 2 Programming Data/specdata"
pollutantmean(directory,"sulfate",70:72)
pollutantmean(directory,"sulfate",23)
pollutantmean(directory,"sulfate",1:10)
pollutantmean(directory,"sulfate",23)
pollutantmean(directory,"sulfate",23)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",23)
pollutantmean(directory,"sulfate",1:10)
pollutantmean(directory,"sulfate",70:72)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"sulfate",70:72)
source('~/GitHub/Coursera/R Programming/Week 2/pollutantmean.R')
pollutantmean(directory,"nitrate",70:72)
pollutantmean(directory,"nitrate",23)
install.packages("bitops")
source('~/GitHub/Coursera/R Programming/Week 2/rprog-scripts-submitscript1.R')
source('~/GitHub/Coursera/R Programming/Week 2/submitscript1.R')
submitscript1
submit
submit()
setwd("~/GitHub/Coursera/R Programming/Week 2")
submit()
pollutantmean(directory,"nitrate",23)
pollutantmean(directory,"nitrate",70:72)
submit()
source('~/GitHub/Coursera/R Programming/Week 2/submitscript1.R')
submit()
source('D:/Temp/Coursera/R Programing/MyLogin.r')
MyLogin
MyLogin()
